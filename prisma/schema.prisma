// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  refresh_token_expires_in Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id        String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  userName String @unique
  password String
  comments Comment[]
  // posts    Post[]
  accounts Account[]
}

model Post {
 id         String    @id  @default(uuid())
 createdAt  DateTime @default(now())
 updatedAt  DateTime @updatedAt

//  ownerId    String
//  owner      User @relation(fields: [ownerId], references: [id])

 body       String
//  deleted    Boolean @default(false)
//  comments   Comment[]

//  @@unique([ownerId])
//  @@index([ownerId, id])
}

model Comment{
 id         String    @id  @default(uuid())
 createdAt  DateTime @default(now())
 updatedAt  DateTime @updatedAt

//  postId     String
//  post       Post @relation(fields: [postId], references: [id])

 ownerId    String
 owner      User @relation(fields: [ownerId], references: [id])

 body       String
 deleted    Boolean @default(false) 

 @@index([ownerId, id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}